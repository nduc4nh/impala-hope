select * from functional_kudu.zipcode_incomes where id = '8600000US00601'
---- PLAN
F00:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=7.75MB mem-reservation=4.00MB thread-reservation=2
  PLAN-ROOT SINK
  |  output exprs: functional_kudu.zipcode_incomes.id, functional_kudu.zipcode_incomes.zip, functional_kudu.zipcode_incomes.description1, functional_kudu.zipcode_incomes.description2, functional_kudu.zipcode_incomes.income
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |
  00:SCAN KUDU [functional_kudu.zipcode_incomes]
     kudu predicates: id = '8600000US00601'
     mem-estimate=3.75MB mem-reservation=0B thread-reservation=1
     tuple-ids=0 row-size=124B cardinality=1
     in pipelines: 00(GETNEXT)
====
# The cardinality from "zip = '2'" should dominate.
select * from functional_kudu.zipcode_incomes where id != '1' and zip = '2'
---- PLAN
F00:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=7.75MB mem-reservation=4.00MB thread-reservation=2
  PLAN-ROOT SINK
  |  output exprs: functional_kudu.zipcode_incomes.id, functional_kudu.zipcode_incomes.zip, functional_kudu.zipcode_incomes.description1, functional_kudu.zipcode_incomes.description2, functional_kudu.zipcode_incomes.income
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |
  00:SCAN KUDU [functional_kudu.zipcode_incomes]
     predicates: id != '1'
     kudu predicates: zip = '2'
     mem-estimate=3.75MB mem-reservation=0B thread-reservation=1
     tuple-ids=0 row-size=124B cardinality=1
     in pipelines: 00(GETNEXT)
====
select * from functional_kudu.zipcode_incomes where id > '1' and zip > '2'
---- PLAN
F00:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=7.75MB mem-reservation=4.00MB thread-reservation=2
  PLAN-ROOT SINK
  |  output exprs: functional_kudu.zipcode_incomes.id, functional_kudu.zipcode_incomes.zip, functional_kudu.zipcode_incomes.description1, functional_kudu.zipcode_incomes.description2, functional_kudu.zipcode_incomes.income
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |
  00:SCAN KUDU [functional_kudu.zipcode_incomes]
     kudu predicates: zip > '2', id > '1'
     mem-estimate=3.75MB mem-reservation=0B thread-reservation=1
     tuple-ids=0 row-size=124B cardinality=3.32K
     in pipelines: 00(GETNEXT)
====
select * from functional_kudu.zipcode_incomes where id = '1' or id = '2' or zip = '3'
---- PLAN
F00:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=7.75MB mem-reservation=4.00MB thread-reservation=2
  PLAN-ROOT SINK
  |  output exprs: functional_kudu.zipcode_incomes.id, functional_kudu.zipcode_incomes.zip, functional_kudu.zipcode_incomes.description1, functional_kudu.zipcode_incomes.description2, functional_kudu.zipcode_incomes.income
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |
  00:SCAN KUDU [functional_kudu.zipcode_incomes]
     predicates: id IN ('1', '2') OR zip = '3'
     mem-estimate=3.75MB mem-reservation=0B thread-reservation=1
     tuple-ids=0 row-size=124B cardinality=3
     in pipelines: 00(GETNEXT)
====
